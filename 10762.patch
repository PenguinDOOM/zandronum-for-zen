# HG changeset patch
# User Braden Obrzut <admin@maniacsvault.net>
# Date 1410800347 14400
#      Mon Sep 15 12:59:07 2014 -0400
# Node ID c55aa8bf98f44adae235c9b38315dd5f60e3342c
# Parent  b60fe7a2bb45bfe9a6fa4eb6666820ee340a1e64
- Applied anonymous patch to fix uncapped stuttering in SDL backend.

diff -r b60fe7a2bb45 -r c55aa8bf98f4 src/sdl/i_system.cpp
--- a/src/sdl/i_system.cpp	Sun Jan 16 12:44:36 2022 -0500
+++ b/src/sdl/i_system.cpp	Mon Sep 15 12:59:07 2014 -0400
@@ -142,14 +142,13 @@
 
 
 static DWORD TicStart;
-static DWORD TicNext;
 static DWORD BaseTime;
 static int TicFrozen;
 
 // Signal based timer.
 static Semaphore timerWait;
 static int tics;
-static DWORD sig_start, sig_next;
+static DWORD sig_start;
 
 void I_SelectTimer();
 
@@ -190,11 +189,9 @@
 		// [Leo] Replaced the expressions for TicStart and TicNext below.
 		/*
 		TicStart = tm;
-		TicNext = Scale((Scale (tm, TICRATE, 1000) + 1), 1000, TICRATE);
 		*/
 		DWORD CurrentTic = ((tm - BaseTime) * TICRATE) / 1000;
 		TicStart = (CurrentTic * 1000 / TICRATE) + BaseTime;
-		TicNext = ((CurrentTic + 1) * 1000 / TICRATE) + BaseTime;
 	}
 	return Scale(tm - BaseTime, TICRATE, 1000);
 }
@@ -204,7 +201,6 @@
 	if (saveMS)
 	{
 		TicStart = sig_start;
-		TicNext = sig_next;
 	}
 	return tics;
 }
@@ -275,7 +271,6 @@
 	if(!TicFrozen)
 		tics++;
 	sig_start = SDL_GetTicks();
-	sig_next = Scale((Scale (sig_start, TICRATE, 1000) + 1), 1000, TICRATE);
 	SEMAPHORE_SIGNAL(timerWait)
 }
 
@@ -318,15 +313,14 @@
 fixed_t I_GetTimeFrac (uint32 *ms)
 {
 	DWORD now = SDL_GetTicks ();
-	if (ms) *ms = TicNext;
-	DWORD step = TicNext - TicStart;
-	if (step == 0)
+	if (ms) *ms = TicStart + (1000 / TICRATE);
+	if (TicStart == 0)
 	{
 		return FRACUNIT;
 	}
 	else
 	{
-		fixed_t frac = clamp<fixed_t> ((now - TicStart)*FRACUNIT/step, 0, FRACUNIT);
+		fixed_t frac = clamp<fixed_t> ((now - TicStart)*FRACUNIT*TICRATE/1000, 0, FRACUNIT);
 		return frac;
 	}
 }
